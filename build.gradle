buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}


version = config.modVersion.toString()
group= "src.train" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Traincraft"

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    replaceIn "Info.java"
    replace "@VERSION1@", config.modVersion.toString()
    mappings = "stable_20"
}

repositories {
    maven {
        name "ChickenBones"
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    repositories {
        ivy {
            name "BuildCraft"
            artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision](-[classifier]).[ext]"
        }
    }
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
	
    compile name: "buildcraft", version: "7.2.7", classifier: "dev"
    compile "codechicken:CodeChickenLib:1.8-1.0.5.36:dev"
    compile "codechicken:CodeChickenCore:1.8-1.0.5.36:dev"
    compile "codechicken:NotEnoughItems:1.8-1.0.5.104:dev"

    compile fileTree(dir: 'libs', include: ['*.jar'])
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea
{
	module
	{
		inheritOutputDirs = true
	}
}
